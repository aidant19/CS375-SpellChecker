Analysis of AlgorithmsCS  Fall Small Assignment DueBY THE BEGINNING OF CLASS Monday October The purpose of this Smaller Assignment is to practice explaining algorithm correctnessusing loop invariants Please see the lecture notes of Oct  for many related detailsWe will go over this Smaller Assignment and those lecture notes more fully in classon Monday Because of that ontime submission of this assignment is essentialpleasedo this work to prepare for Mondays class Its okay if youre not fully sure how to dothese exercises at this pointwell go over them soon and in terms of your grade onthis SA see the note immediately belowFor this Smaller Assignment as long as you submit an answer with a demonstrablestrong effort to solve the problems and explain your answers thoroughlyincluding ifyou were not able to solve an exercise what progress you made what was left unsolvedand what made it hard to solveif you do not receive full credit you will be able torevise your answer after receiving feedback to bring your grade up to full creditFor this Smaller Assignment the standard file naming conventions apply Please submit your typewritten answers in a PDF file namedCS SAuseridpdfwhere userid is replaced by your Colby userid your full userid including class yearand submit it to your SubmittedWork folder in your Google drive space for this courseA general note for CS As always please present answers cleanly and explainthem clearly and thoroughly  giving all details needed to make your answers easyto understand typedup rather than handwritten answers are especially appreciated Feel free to talk with your Prof or TAs about using LATEX to typeset youranswers Graders may not award full credit to incomplete or illegible solutions Clearcommunication isthe point on every assignmentIn general in CS unless explicitly specified otherwise answers should be accompanied by explanations Answers without explanations may not receive full credit Pleasefeel free to ask me any questions about explanations that might come upExercises Here is the pseudocode for Bubble Sort as seen in classBubbleSort A   nfori tolengthA  forj lengthA downto i  ifAjAj swap A j with A jFor this exercise youll extend what we did with Bubble Sort in classyoull give acorrectness argument using our loop invariant To do this consider the loop invariantpresented here for convenienceSubarray Ai consists of the i smallest values of A in sorted orderandAin consists of the remaining values of Ano constraint on orderRecall the three parts of an explanation using loop invariants presented here in slightlydifferent wording than in the lecture notesa Give a very short and convincing explanation of how the invariant is true beforethe first iteration of the loop As always be sure to explain how every part of theinvariant is true not just one part of itHint In this case note that before the first iteration iis  What can be saidabout subarray Ai Recall what was said in lecture about vacuous truthb Give a concise and convincing explanation of how your pseudocode ensures theinvariant is true after each successive iteration Refer directly to the pseudocodeciting specific lines of pseudocode in your explanationHint Before the ith iteration starts we know that Ai contains the ismallest values of A in sorted order What element of Awill be in Ai when theith iteration is over And how does that help you establish when that iterationis over that Ai are then the ismallest elements of Aand in sorted orderc Give a concise and convincing explanation of how the algorithm meets its specifications Refer specifically to both the invariant property and the specifications aspart of this explanationreferring to the specifications is essential for establishingalgorithm correctnessHint At the end of the loop in What elements then are in Ain Andwhat does that say about the element thats then in An and where it belongsin sorted order Then how does knowing that Ai is the i smallestvalues of Ain sorted order fit with the specification for the sorting problem tohelp you explain correctnessPlease write all three parts in your answer for this exercise And please be sure eachpart of your explanation explains both components of the invariant not just the partabout Ai but also the part about Ain It is a common error to sometimesoverlook one part or the otherThese do not need to be three lengthy answersa few sentences each could be enoughas long as those sentences contain the key detailsRefer specifically to the pseudocode and to the specifications for the sorting problemin your explanation Diagrams or specific examples are not sufficient on their own butif youd like to include them along with a textual explanation feel free do soThe specification for the sorting problem is repeated here for convenienceInput  Sequence of numbers a     a nOutput  Permutation reordering b     b nof the input sequenceperhaps leaving them unchanged such that bb  bnThis specification is the same as the one presented in lecture notes capturing ourintuitions of what it means for a list to be sorted Please see me if there are questionsabout it or about any part of the exercise