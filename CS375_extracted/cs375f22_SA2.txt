Analysis of AlgorithmsCS  Fall Small Assignment DueBY THE BEGINNING OF CLASS Wednesday October This Small Assignment will be graded on effort Make a demonstrable strong effort tosolve the problems and explain your answers thoroughlyincluding if you were notable to solve an exercise what progress you made what was left unsolved and whatmade it hard to solveand you will receive full creditWe will go over this exercise in our next class meeting Because of that ontimesubmission of this assignment is essential Any submission after the beginning of classpm on the deadline date will get a grade no higher than a For this Smaller Assignment the standard file naming conventions apply Please submit your typewritten answers in a PDF file namedCS SAuseridpdfwhere userid is replaced by your Colby userid your full userid including classyearfor example my file would be called CS SAeaaronpdf and submit it toyour SubmittedWork folder in your Google drive space for this course Please reachout to me right away with any questions or concerns about thisA general note for CS As always please present answers cleanly and explainthem clearly and thoroughly  giving all details needed to make your answers easyto understand typedup rather than handwritten answers are especially appreciated Feel free to talk with your Prof or TAs about using LATEX to typeset youranswers Graders may not award full credit to incomplete or illegible solutions Clearcommunication isthe point on every assignmentIn general in CS unless explicitly specified otherwise answers should be accompanied by explanations Answers without explanations may not receive full credit Pleasefeel free to ask me any questions about explanations that might come upExercises Give an iterative not recursive algorithm that returns a list of all permutations ofelements of an input list Input List L a     a n Output List L P     P nof all permutations of L That is each Piis a permutation of L ie Piis a list containing exactly the elements of L and no two Pihave the elements of Lin the same orderingAs part of your process in designing this algorithm be sure to think of a loop invariantfor the algos outer loop as was demonstrated in the lecture notes of our Oct class You do not need to take the formal approach in our textbook of consideringinitialization maintenance andtermination  just have a description of what is trueeach time through the loop as we did in class and use it in the algos design andexplanation of correctness There may be multiple possible loop invariants that wouldwork wellFor full credit please be sure to do the following as parts of explaining your algorithmscorrectnessa Use your loop invariant as part of your explanationb Explicitly directly refer to the algos specifications as part of establishing correctnessIn addition please give the most helpful asymptotic complexity bounds you can onboth the time and space complexity of your algorithm using O or  notation Asalways explain how you arrived at your answers for these complexity boundsPlease turn in your best effort for this exercise As stated in the instructions at thetop of this assignment sheet even if for any reason you arent able to complete theassignment exactly as given please explain your thought process fully and describe theparts of the problem you hadnt fully solved and turn in the best work you can by thedeadlineNOTE As we discussed in class there are n permutations of a list with nelementsIt is taken as a definition that    so wed say the empty list has  permutationA list with one element also has only  permutation Please check your algorithm onboundary cases such as these