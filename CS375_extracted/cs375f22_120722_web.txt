CS   CS   Analysis of Algorithms Professor Eric Aaron Lecture  M W pm Lecture Meeting Location Davis  Business  PS due Dec   SA returned  PS grading update  Project  due pm Monday Dec  Important admin notes  Change to syllabus To be counted for credit all PSs and SAs including revisions must be submitted by pm Sunday Dec  extended from Dec   Final TA hours of semester Thursday Dec   Additions to our schedule  Makeup lecture Friday Dec  at pm Davis    Office hours Monday Dec  am Acknowledgment Some ideas in todays notes are inf luenced by httpswwwcsprincetoneduwaynecslectures npcomplete CS   Which is easier pt   Which is easier finding a solution or checking  verifying a solution  Consider the problem of checking if a number is composite ie not a prime number  Input Integer n  Output Yes if n is compositeif there exists some number   c  n such that n is a multiple of c No otherwise ie  n is prime  Which is easier  Finding if n   is composite Or  Checking that c   is a factor of n This kind of thing can be useful in cryptography applications Thanks to httpswwwcsprincetoneduwaynecs lecturesnpcomplete Its useful to think of this as solving the problem when youre given a solution  and all you have to do is confirm it Which is easier pt   Which is easier finding a solution or checking  verifying a solution  Consider the problem of checking if a number is composite ie not a prime number  Input Integer n  Output Yes if n is compositeif there exists some number   c  n such that n is a multiple of c No otherwise ie  n is prime  Which is easier  Finding if n   is composite Or  Checking that c   is a factor of n This kind of thing can be useful in cryptography applications Thanks to httpswwwcsprincetoneduwaynecs lecturesnpcomplete Vocabulary certificate We call the possible solution that was given to us to be checked a certificate Here  is a certificate CS   Which is easier pt   Which is easier finding a solution or checking  verifying a solution  A clique in an undirected graph GVE is a subset V V st each pair in V is connected by an edge in E  Ie a clique corresponds to a complete subgraph of G  The CLIQUE problem  Input graph G and integer k  Output Yes if there is a clique of size k in G No otherwise  Which is easier  Finding a clique of size  in a graph G Or  Checking that vertices uvxy are a clique of s ize  in graph G Vocab review Here the set uvxy would be a certificate Which is easier pt   Which is easier An optimization problem or its related decision problem  Consider the optimization problem of finding a minimum spanning tree MST of a graph  Compare that to the related decision problem MSTD ecision Given a graph G and a number w does G have an MST with total weight at most w CS   Which is easier pt   Which is easier An optimization problem or its related decision problem  Consider the optimization problem of finding a minimum spanning tree MST of a graph  Compare that to the related decision problem MSTD ecision Given a graph G and a number w does G have an MST with total weight at most w Some observations  If its easy fast to solve the optimization pro blem its easy fast to solve the decision problemjust use the optimization problem a nswer  Its not true the other way around If its easy fast to solve the decision problem for a particular value of w its not necessarily e asy to solve the optimization problemyou might have to check a lot of different v alues of w Which is easier pt   Which is easier An optimization problem or its related decision problem  Consider the optimization problem of finding a minimum spanning tree MST of a graph  Compare that to the related decision problem MSTD ecision Given a graph G and a number w does G have an MST with total weight at most w Some observations  If its easy fast to solve the optimization pro blem its easy fast to solve the decision problemjust use the optimization problem a nswer  Its not true the other way around If its easy fast to solve the decision problem for a particular value of w its not necessarily e asy to solve the optimization problemyou might have to check a lot of different v alues of w  So if the decision problem cant be solved easil y we know the optimization problem cant be solved easily either This is subtle lets think about it CS   Map Visitation Problem MVP  So youre at your job and your supervisor tells you to write an efficient polytime algo to solve the MVP in the general ca se not just special cases of it What do you do Multiple choice  Use a minimumspanning tree approach  Use an allpairs shortest paths approach  Have a long conversation with your supervisor abo ut wasting better uses of your time Input Integer knumber of robots weighted undirected graph G  VE map for visitation   depots Dv   vkstarting points for each robot Output Minmax length of the paths for visiting al l nodes in G given starting depots D   robots start here Example Options  and  wont work But before you do option  you should know youre right CS   Review Reductions Subroutines and Time Complexity  In generaland in these specific exampleskey to using a subroutine is to meet its specifications  Structure your algorithm to give subroutine the pr oper input  Structure your algorithm to use subroutines outpu t to solve the original problem  In these cases can reduce one problem A to another problem B where theres already a subroutine  algorithm for B  Algorithm that does the reducing can be called a  reduction Important but maybe obvious note  Complexity of resulting algorithm depends on compl exity of subroutine This is not surprisingthe complexity of every algor ithm depends on the complexity of its parts Im just making tha t point explicit here because well use it again later Graph Problems CLIQUE  A clique in an undirected graph GVE is a subset V V st each pair in V is connected by an edge in E  Ie a clique corresponds to a complete subgraph of G  The CLIQUE problem  Input graph G and integer k  Output Yes if there is a clique of size k in G N o otherwise On Project  someone on your team designed a brute force algorithm for CLIQUE that was not polynomial time poly time  for short  Can you design a poly time algorithm for CLIQUE Well be considering decision problems from here on  out unless otherwise specified CS   Graph Problems VERTEX COVER  A vertex cover of an undirected graph GVE is a subset V V st if uv is in E then at least one of u or v is in V That is if a vertex covers its incident edges a vertex cover is a set that covers all of E  The size of a vertex cover is the number of vertic es in it  The VERTEX COVER problem  Input graph G and integer k  Output Yes if there is a vertex cover of G with s ize k No otherwise Graph for which vertex set w z is a vertex cover of size Also called Network Cover on Project  Graph Problems and Subroutines  Reductions  Recall focusing only on decision problems  The CLIQUE problem  Input graph G and integer k Output Yes if there is a clique of size k in G No otherwise  The VERTEX COVER problem  Input graph G and integer k Output Yes if there is a vertex cover of G with si ze k No otherwise  How could we use a solution for one of these as a subroutine to solve the other  For example assume we had a solution for VERTEX C OVER How could we use that to create a solution for CLIQUE CS   Reduction from CLIQUE to VERTEX COVER  For a graph GVE we can consider the complement of G GVE  That is the complement of G consists of the same vertices as in G and all the edges pairs of vertices unordered not in G  Given an instance G ck c of CLIQUE construct instance G vc k vc  of VERTEX COVER where  Gvc is the complement of G c kvc is V  kc that is the number of vertices not in the possible clique for the CLIQUE instance Is this a polynomial time reduction What does this reduction say about the complexity of VERTEX COVER  Assume that CLIQUE cannot be solved in polynomial time  Then because we can reduce CLIQUE to VERTEX COVER in poly time  we know VERTEX COVER cannot be poly time either  How do we know Argument by contradiction  If VERTEX COVER could be solved in poly time wed  use that poly time algorithm as our subroutine  Then wed be able to solve CLIQUE in poly time by this reduction  But CLIQUE by assumption at the beginning of this  slide cant be poly time so our assumption that VERTEX COVER coul d be poly time must be false This is a huge assumption Note that were not just  saying one algorithm is not poly time Were saying every algorithm is not poly time Were talking about the complexity of the problem  not just of an algorithm This is deep And useful CS   Tractability and Complexity  Tractability  It is generally accepted that a problem is tractable solvable in practice not just in theory if there is a polynomialtime algorithm for it   ie in class Onk for some constant k  If a problem requires an exponential time solution  or worse it is considered intractablewithout an efficient solution Goal Classify problems by how efficiently they can be solved  BigO or Theta classes Relatively finedetail d istinctions  Tractability distinctions based in larger classes P problems solvable in polynomial time hence the name P NP problems with solutions verifiable in polynomial time  PSPACE  problems solvable in polynomial space no  restriction on time  EXPTIME problems solvable in exponential time  EXPSPACE problems solvable in exponential space Etc etc etc  More about verifiability coming soon CS   The Class NP A Quick Introduction  NP the class of problems solvable in nondeterministic polynomial time hence the name NP  Somewhat loosely that means that a problem is in NP if it can be verified in polynomial time  Could think of it as If we were given a certificate of a solution essentially a potential solution  we could check it for correctness   is it actually a solution in polynomial time in input size  Could think of it as If given a correct certifi cate we could solve the problem in polynomial time  Note that if a solution to a problem can be found in polynomial time that problem can be verified in polynomial ti me  What does this say about the relationship between P and NP  For more about nondeterminism in computation see  CS Recall This is about decision problems not relat ed optimization problems CLIQUE is in NP  A clique in an undirected graph GVE is a subset V V st each pair in V is connected by an edge in E  Ie a clique corresponds to a complete subgraph of G  The CLIQUE problem  Input graph G and integer k  Output Yes if there is a clique of size k in G N o otherwise Well focus on V   Do you see why CLIQUE is in NP What would a polytime verification algorithm take as input What would the certificate be What would the verification algorithm do using the certificate CS   HAMILTONIAN CYCLE is in NP  Consider the hamiltonian cycle problem  A hamiltonian cycle of a connected directed graph GVE is a simple cycle that contains each vertex in V though perhaps not every edge in E  The hamiltonian cycle problem Given connected dig raph G does G contain a hamiltonian cycle Example  Is there a hamiltonian cycle in this graph In some sources Hamiltonian is capitalized but not in CLRS Historical Note Hamiltonian cycle isnt named after that Hamilton Less Historical Note I have a great idea for an NPCompleteness musical LinManuel call me Also called Hamiltonian Tour on Project  Although nobody knows for sure experts believe that an NPCompleteness musical would run for a very very long time HAMILTONIAN CYCLE is in NP  Consider the hamiltonian cycle problem  A hamiltonian cycle of a connected directed graph GVE is a simple cycle that contains each vertex in V though perhaps not every edge in E  The hamiltonian cycle problem Given connected dig raph G does G contain a hamiltonian cycle Example  Is there a hamiltonian cycle        in this graph In some sources Hamiltonian is capitalized but not in CLRS HAMILTONIAN CYCLE is in NP What would a polytime verification algorithm take as input What would the certificate be What would the verification algorithm do using the certificate CS   Which is easier pt   Recall the Hamiltonian cycle problem  A H amiltonian cycle of a connected directed graph GVE is a simple cycle that contains each vertex in V though perhap s not every edge in E  The Hamiltonian cycle problem Given connected dig raph G does G contain a Hamiltonian tour  Consider the Euler tour problem  An Euler tour of a connected directed graph is a cycle that uses  each edge exactly once though it can visit vertices multiple  times  The Euler tour problem Given connected digraph G  does G contain an Euler tour  How long what complexity would it take to   solve each of these problems   verify that a possible solution was correct if w e were given one  And is there a meaningful difference in tractabili ty between the problems CS   P NP and NPCompleteness  We know P NP because if a solution can be found in polynomia l time one can be checked in polynomial time  Is NP P Good question One of the best around actually Extra credit exercise Prove or disprove NP P You would get an A for this course Oh and also  at least Real ly  It is generally believed that P NPproblems in P are tractable and NPproblems not in P are thought to be intractable  Thus its important to determine if a problem is in NP or at least as hard as a problem that is in NP and not known to be in P  Complexity class NPC  Class of NPcomplete problems  A problem is NPcomplete if a it is in NP and b  it is at least as hard as every problem in NP  So if one NPcomplete problem is tractable all problems in NP are tractable No joke This is an exceptionally important slide NPC problems are the hardest problems in NPthus theyre presumed intractable Using Reductions To Show Intractability  If we know problem B has no polynomial time algori thm then consider a reduction from B to A  Takes an instance  of B  Transforms it in polynomial time into an instance  of A   such that a decision on  would give us a decision on   Then if A could be solved in polynomial time B c ould also  Thus by contradiction A must not be solvable in polynomial time  More generally A is at least as hard to solve in poly time as B  A similar procedure will be used to show NPcompleteness  If B is NPcomplete A must be at least as difficult to solve in poly time so A is a candidate for being NPcomplete  This is a common use of polynomialtime reductions at least we think theyre intractable CS   NPCompleteness  More formally  concisely heres what we mean by NPcompleteness complexity class NPC  L NPC iff  L NP  For every L in NP L reduces to L An implication  If L is NPcomplete and L is in P then  If L satisfies  it is called NPhard  If L is NPhard and also in NP  then its NPcomplete NPCompleteness  More formally  concisely heres what we mean by NPcompleteness complexity class NPC  L NPC iff  L NP  For every L in NP L reduces to L An implication  If L is NPcomplete and L is in P then P  NP So  if P NP then if L is NPcomplete L is not in P We think P NP So we believe all NPComplete problems are not possible to solve in poly time But we dont kn ow for sure If L satisfies  it is called NPhard  If L is NPhard and also in NP  then its NPcomplete CS   Which of these represents something possible about P and NP List of NPComplete Problems partial list from Wikipedia  Graphs and hypergraphs  Graphs occur frequently in everyday applications Examples include biological or social networks which contain hundreds thousands and even billions of nodes in some cases eg Facebook or LinkedIn  planarity  dimensional matching  Bipartite dimension  Capacitated minimum spanning tree  Route inspection problem also called Chinese postman problem for mixed graphs having both directed and undirected edges The program is solvable in polynomial time if the graph has all undirected or all directed edges  Games and puzzles  Battleship  Bulls and Cows marketed as Master Mind certain optimisation problems but not the game itself  Eternity II  Generalized FreeCell  Fillomino  Hashiwokakero  Heyawake  Generalized Instant Insanity  Kakuro Cross Sums  Kuromasu also known as Kurodoko  Lemmings with a polynomial time limit  Light Up httpsen wikipedia orgwikiLi stofNPcomplete problems CS   List of NPComplete Problems partial list from Wikipedia  Graphs and hypergraphs  Graphs occur frequently in everyday applications Examples include biological or social networks whi ch contain hundreds thousands and even billions of  nodes in some cases eg Facebook or LinkedIn  planarity  dimensional matching  Bipartite dimension  Capacitated minimum spanning tree  Route inspection problem also called Chinese post man problem for mixed graphs having both directed  and undirected edges The program is solvable in p olynomial time if the graph has all undirected or all directed edges Var iants include the rural postman problem  Clique problem  Complete coloring aka achromatic number  Domatic number  Dominating set aka domination number  NPcomplete special cases include the edge dominat ing set problem ie the dominating set problem i n line graphs NPcomplete variants include the con nected dominating set problem and the maximum leaf spanning tree problem   Bandwidth problem  Clique cover problem  Rank coloring aka cycle rank  Degreeconstrained spanning tree  Exact cover problem Remains NPcomplete for set s Solvable in polynomial time for sets this is a matching  Feedback vertex set  Feedback arc set  Graph homomorphism problem  Graph coloring  Graph partition into subgraphs of specific types  triangles isomorphic subgraphs Hamiltonian subgra phs forests perfect matchings are known NPcompl ete Partition into cliques is the same problem as coloring the complement of the given graph A related problem is to find a partiti on that is optimal terms of the number of edges bet ween parts  Hamiltonian completion  Hamiltonian path problem directed and undirected   Longest path problem  Maximum bipartite subgraph or especially with wei ghted edges maximum cut  Maximum independent set  Maximum Induced path  Graph intersection number  Metric dimension of a graph  Minimum kcut  Steiner tree or Minimum spanning tree for a subse t of the vertices of a graph The minimum spann ing tree for an entire graph is solvable in polynom ial time  Modularity maximization  Pathwidth  Set cover also called minimum cover problem This  is equivalent by transposing the incidence matrix  to the hitting set problem  Set splitting problem  Shortest total path length spanning tree  Slope number two testing  Treewidth  Vertex cover Mathematical programming  partition problem  Bin packing problem  Knapsack problem quadratic knapsack problem and several variants  Variations on the Traveling salesman problem The problem for graphs is NPcomplete if the edge lengt hs are assumed integers The problem for points on the plane is NPcomplete with the discretized Euclidean metric and rectiline ar metric The problem is known to be NPhard with the nondiscretized Euclidean metric  Bottleneck traveling salesman  Integer programming The variant where variables a re required to be  or  called zeroone linear pr ogramming and several other variants are also NPc omplete  Latin squares The problem of determining if a par tially filled square can be completed to form one  Numerical dimensional matching  Partition problem  Quadratic assignment problem  Quadratic programming NPhard in some cases P if  convex  Subset sum problem  Formal languages and string processing  Closest string  Longest common subsequence problem  The bounded variant of the Post correspondence pro blem  Shortest common supersequence  Stringtostring correction problem  Games and puzzles  Battleship  Bulls and Cows marketed as Master Mind certain o ptimisation problems but not the game itself  Eternity II  Generalized FreeCell  Fillomino  Hashiwokakero  Heyawake  Generalized Instant Insanity  Kakuro Cross Sums  Kuromasu also known as Kurodoko  Lemmings with a polynomial time limit  Light Up  Masyu  Minesweeper Consistency Problem but see Scott  Stege  van Rooij  Nimber or Grundy number of a directed graph  Numberlink  Nonograms  Nurikabe  Rubiks Cube solved optimally  SameGame  Generalized Set   Slither Link on a variety of grids  Generalized Sudoku  Problems related to Tetris  Verbal arithmetic  Other  Art gallery problem and its variations  Berth allocation problem  Betweenness  Assembling an optimal Bitcoin block  Boolean satisfiability problem SAT There are many variations that are also NPcomplete An i mportant variant is where each clause has exactly t hree literals SAT since it is used in the proof of many other NPcompleteness results  Conjunctive Boolean query  Cyclic ordering  Circuit satisfiability problem  Uncapacitated facility location problem  Flow Shop Scheduling Problem  Generalized assignment problem  Upward planarity testing  Hospitalsandresidents problem with couples  Some problems related to Jobshop scheduling  Monochromatic triangle  Minimum maximal independent set aka minimum ind ependent dominating set  NPcomplete special cases include the minimum maxi mal matching problem which is essentially equa l to the edge dominating set problem see above  Maximum common subgraph isomorphism problem  Minimum degree spanning tree  Minimum kspanning tree  Metric kcenter  Maximum Satisfiability  Modal logic SSatisfiability  Some problems related to Multiprocessor scheduling Maximum volume submatrix  Problem of selecting the  best conditioned subset of a larger m x n matrix This class of problem is associated with Rank revea ling QR factorizations and D optimal experimental design  Minimal addition chains for sequences The com plexity of minimal addition chains for individual n umbers is unknown  Nonlinear univariate polynomials over GFn n t he length of the input Indeed over any GFqn  Openshop scheduling  Pathwidth or equivalently interval thicknes s and vertex separation number  Pancake sorting distance problem for strings  kChinese postman  Subgraph isomorphism problem  Variations of the Steiner tree problem Specifical ly with the discretized Euclidean metric rectilin ear metric The problem is known to be NPhard with the nondiscretized Euclidean metric  Set packing  Serializability of database histories  Scheduling to minimize weighted completion time  Sparse approximation  Block Sorting Sorting by Block Moves  Second order instantiation  Treewidth  Testing whether a tree may be represented as Eucli dean minimum spanning tree  Threedimensional Ising model  Vehicle routing problem httpsen wikipedia orgwikiLi stofNPcomplete problems Point being there are a lot of them  and the Map Visitation Problem which is NPComplete isnt even on this list Map Visitation Problem MVP  So youre at your job and your supervisor tells you to write an efficient polytime algo to solve the MVP in the general ca se not just special cases of it What do you do Multiple choice  Use a minimumspanning tree approach  Use an allpairs shortest paths approach  Have a long conversation with your supervisor abo ut wasting better uses of your time Input Integer knumber of robots weighted undirected graph G  VE map for visitation   depots Dv   vkstarting points for each robot Output Minmax length of the paths for visiting al l nodes in G given starting depots D   robots start here Example Options  and  wont work But before you do option  you should know youre right and NPCompleteness can help CS   Managing NPCompleteness NPCompleteness is everywhere How do we deal with it  Focus on special cases that we can efficiently solve  A lot of important problems fall into this categor y  Can work on approximation algorithms instead of exact solutions  Use intractability to your benefit  Example Cryptography  Keep trying to prove P  NP  Good luck Thanks to httpswwwcsprincetoneduwaynecs lecturesnpcomplete Headlines Coming Up on A Recap Of CSWhats the fastest sorting algorithm  Is it quicksort  The answer might surprise you Or it might not All the hottest fashion trends for programmers most important complexity classes for programmers  With essential algos from each one Common myths about recursion debunked  Some of the answers here actually might surprise you How to make an algorithm not just a little faster but a lot faster Could your next problem be NPComplete And how would you know Plus language  NLP applications  a little peek into what a compiler  interpreter does and more This is a lot Thank you for your work this semester 