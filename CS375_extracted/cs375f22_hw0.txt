Analysis of AlgorithmsCS  Fall Problem Set DueAT THE BEGINNING OF CLASS Wednesday September IMPORTANT Some of these exercises may build upon topics covered in our Sept class meeting they are included here early so you can see all of the exercises onthis assignmentFrom your textbook CLRS please read Chapters    and To submit this Problem Set the standard file naming and HW submission conventionsapply Please put your answers in a PDF file namedCS PSuseridpdfwhere userid is replaced by your Colby useridfor example my file would be calledCS PSeaaronpdf and submit it to your SubmittedWork folder Please reachout to me right away with any questions or concerns about thisA few essential style guidelines for writing algorithms in CSWhen presenting an algorithm avoid using languagespecific commandsroutineswithout comments in pseudocode Pseudocode by definition is supposed tobe languageindependent at a level of abstraction higherlevel than particularprogramming languagesPlease be sure to initialize variables or declare inputsouptuts and be sure thepurpose of every variable including the names of functions or algorithmscanbe quickly and fully understood by a reader typically this is done either by usingdescriptive variable names or by describing variables in English Algorithms inwhich variables cannot be promptly understood may not receive full credit soplease feel free to ask me about variable names and descriptionsIm happy totalk with you about particular situations that might come upA general note for CS When writing up your homework please write neatly andexplain your answers clearly  giving all details needed to make your answers easyto understand Graders may not award full credit to incomplete or illegible solutionsClear communication isthe point on every assignmentIn general in CS unless explicitly specified otherwise answers should be accompanied by explanations Answers without explanations may not receive full credit Pleasefeel free to ask me any questions about explanations that might come upExercises Design an iterative ie without using recursion algorithm to find all the commonelements in two sorted lists of numbers For example for input lists   and the output should be the list   Input Two sorted lists of elements S  s  sm and T  t  tn Output List of numbers L  n  nk where ni is a member of L exactly when it is an element of both S and T Also for each value vi that occurs on L the number of times it occurs on L is equal to the minimum of the number of times vi occurs on S and the number of times vi occurs in T For example if S      and T        the return value should be the list   Please give both a pseudocode description and an English description to make it aseasy as possible to understand the algorithm and explain how you know it solves theproblem correctlyIn addition answer this question What is the maximum number of comparisons youralgorithm makesie number of times a pair of numbers is comparedif the lengthsof the two input lists are mandn respectivelyAlso please give a concise convincing explanation of the worstcase time complexityof your algorithmNote  Recall that there are different operations to add an element to a list  append in Python and to combine two lists into one  extend  in Python If you use eitheror both in your answer please make sure it is clear which operation is being used Ofcourse you are also welcome to use other common list operations such as insert orremove  if youd like List the following functions of naccording to their order of growththat is how fasteach function grows as ngets bigfrom lowest to highestn  lg n  n n n  lnnn nAs is conventional the lg function is logarithm base  the ln function is the naturallogarithm  logarithm base e and lnnis common notation for ln n Although youdont need to explain every part of the ordering for this exercise please give shortexplanations  sentences for the followinga how you know the secondsmallest comes before the thirdsmallest andb how you know the secondlargest comes after the thirdlargestNOTE  This exercise is not directly about the definition of bigO notation and it doesnot require that definition Its a mathematical background exercise supporting thecomplexity analysis work well be doing as the semester goes along Prof Snailshell of the Portland Institute of Technology which continues to not reallyexist proposed the following algorithm for finding the distance between the twoclosest elements in an array of numbersMinDistance A   nInput Array A  n of numbersOutput Minimum distance between two elements of Admin  min distance variable initialized to fori tonforj tonifijandAiAjdmindmin AiAjreturn dminThis is not the most timeefficient way to solve the problem Make as many improvements as you can in Prof Snailshells algorithm If you need to you may change thealgorithm altogether if not improve the implementation givenNote The notation xyrefers to the absolute value of the quantity  xyiethe distance between xandy Prof E Nigma of the Portland Institute of Technology hired you to analyze thealgorithm given here in pseudocode but as usual Prof Nigma neglected to explainwhat the algorithm does Input A matrix An n of integersfor i   to n dofor j  i to n doif Aij  Ajireturn Falsereturn TrueIn the above recall that a matrix is essentially just a twodimensional array so Ai jmight in some languages be written as Aija What does this algorithm do Give an English description of what inputs lead toit returning True and what inputs lead to it returning False You do not need togive examples as part of your answer but you are welcome to include example Darrays along with the English description if it would make your answer clearerb Using summation notation formulas ie with s to represent summationsgive a summation expression for the number of comparisons that are madeby this algorithm in the worst case assuming its input is of the form Ann  Then solve that summationthat is find an equivalent simple formulafor that expression showing the number of operations as a function of nNote You may want to do Smaller Assignment SA before doing this exercisec Based on your answer to exercise b above give the most informative worstcaseasymptotic time complexity bound you can for this algorithm using bigO  or notationd Give the most informative bestcase asymptotic time complexity bound you canfor this algorithm Note that the summation you solved in exercise b was underworstcase assumptionsplease think about what would make the bestcase timecomplexitye Give the most informative asymptotic bound you can on the space complexity forthis algorithm for the best case ie using the least space other than that neededfor the input and the worst case ie using the most space other than that neededfor the input Your explanation should include your reasoning about whether thebest case and worst case for space complexity are the same or different from eachotherAs usual in CS  be sure to give concise convincing explanations for your answers A problem solving puzzle There are four people who want to cross a bridge all ofwhich begin on the same side They have  minutes to get to the other side As iscommon in these kinds of puzzles however theres a catchBecause the bridge is old and weakened by time a maximum of two people can crossthe bridge at one time Moreover its night time and they have oneonly oneflashlight Any time people cross whether one person or two people they must havethe flashlight with them and the flashlight must be walked back and forth over thebridge it cant eg be thrown from one side to the otherPerson  takes  minute to cross the bridge person  takes  minutes person  takes minutes and person  takes  minutes If a pair crosses the bridge together theymust walk together at the pace of the slower personCan all four of them get to the other side in  minutes If so how If not why notBe sure to explain your answerNote A popular Algorithms textbook notes that according to a rumor on the Internet interviewers at a wellknown software company located near Seattle have giventhis problem to intervieweesImportant For this exercise explain the full thought process by which you arrived atyour answer Or if you arent able to find a full answer explain the thought processas far as you get with your reasoning This exercise is intended to give practice withthinking through a problem and clearly expressing the design process for your solutionFor example one might say First we thought about sending blah blah blah but wethen realized blah blah blah Then to address that we thought blah blah blah butthat didnt work because of blah blah blah Because of that we     Please try toavoid using the word blah in your answerIf you have any questions about whats being asked please feel free to ask your profThis is a classic puzzleI hope you have some fun with it