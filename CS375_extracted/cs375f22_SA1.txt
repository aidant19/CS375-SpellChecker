 analysis of algorithms cs  fall  small assignment  dueby the beginning of class monday september  for this smaller assignment the standard file naming conventions apply please sub- mit your typewritten answers in a pdf file named cs sauserid pdf where userid is replaced by your colby userid your full userid including class year for example my file would be called cs saeaaron pdf  and submit it to your submittedwork folder in your google drive space for this course  please reach out to me right away with any questions or concerns about this a general note for cs as always please present answers cleanly and explain them thoroughly giving all details needed to make your answers easy to understand  graders may not award full credit to incomplete or illegible solutions or answers without explanations  clear communication isthe point on every assignment  please feel free to ask me any questions about explanations that might come up exercises   familiarity with summations andpnotation is essential for algorithm complexity analysis here are some warm-up exercises  for these exercises as usual for cs please be sure to show your work and give a short but informative explanation for every answer  a exercise a   pg    a simple formula here means a mathematical expression with nopnotation for which plugging in a value for nwill give the numeric value of the formula  for example a simple formula forpn iiisnn   b find a simple formula forpn ii  hints please re-read clrs appendix a   often a good way to solve these exercises is to use properties of summations such aslinearity  on pg   to transform your summation into another form and then apply some known summation formulas to get the  notation out  the summation formulas a  page  and a  page  are my favorites sometimes with summations it can be easy to make off-by-one errors  this may or may not apply to your solutions to these exercises depending on your approach but in general please be on the lookout for off-by-one errors   here are a few exercises on properties of logarithms you'll be asked to show that a few properties of logarithms are true  the objective is to help you become more familiar with some properties of logarithms that are especially important for analysis of recursive algorithms   as an example here's how we might show that logbxy logbx logby  in the below recall from the definition of logarithm that a logarithm really stands for an exponent  xlogbnmeans that bxn i e  xis the exponent we raise bto to get n  to make it easier to talk about raising some relevant expressions to a power we'll introduce a few variables let k logbxy logbx and m logby  then by the definition of logarithm above bkxybx and bmy  note do you see why therefore bkbbmbm and thus by standard properties of exponents km which is what we had set out to show  now pick  of the following  properties of logarithms your choice and show that they are true  if you turn in all  of them only your best  will be counted for your grade so i hope you'll give all  of them a try please give detailed explanations as shown in the example above assume that a b c n are positive real numbers but note they are not necessarily integers  a logbannlogba  b logbnlogcn logcb  this shows that changing the base of a logarithm say from logbntologcn really means multiplying by a constant factor because this could be rewritten as logbn logcblogcn  calogbnnlogba  this result is sometimes called the log-switching theorem since it says that we can switch aandn  