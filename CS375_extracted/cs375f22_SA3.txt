analysis of algorithms  cs  fall  small assignment   due by the beginning of class monday october    the purpose of this smaller assignment is to practice explaining algorithm correctness using loop invariants  please see the lecture notes of oct   for many related details  we will go over this smaller assignment and those lecture notes more fully in class on monday  because of that on-time submission of this assignment is essential please do this work to prepare for monday's class it's okay if you're not fully sure how to do these exercises at this point we'll go over them soon and in terms of your grade on this sa see the note immediately below   for this smaller assignment as long as you submit an answer with a demonstrable strong effort to solve the problems and explain your answers thoroughly including if you were not able to solve an exercise what progress you made what was left unsolved and what made it hard to solve if you do not receive full credit you will be able to revise your answer after receiving feedback to bring your grade up to full credit   for this smaller assignment the standard file naming conventions apply please sub-  mit your typewritten answers in a pdf file named  cs sa userid pdf  where userid is replaced by your colby userid your full userid including class year and submit it to your submittedwork folder in your google drive space for this course    a general note for cs as always please present answers cleanly and explain them clearly and thoroughly giving all details needed to make your answers easy to understand typed-up rather than handwritten answers are especially appreci- ated  feel free to talk with your prof  or ta's about using latex to typeset your answers graders may not award full credit to incomplete or illegible solutions  clear communication is the point on every assignment   in general in cs unless explicitly specified otherwise answers should be accompa- nied by explanations  answers without explanations may not receive full credit  please feel free to ask me any questions about explanations that might come up  exercises    here is the pseudocode for bubble sort as seen in class  bubblesorta       n  for i   to lengtha             for j  lengtha downto i    if aj  aj    swap aj with aj      for this exercise you'll extend what we did with bubble sort in class you'll give a correctness argument using our loop invariant  to do this consider the loop invariant presented here for convenience  subarray a  i  consists of the i  smallest values of a in sorted order and ai  n consists of the remaining values of a no constraint on order   recall the three parts of an explanation using loop invariants presented here in slightly different wording than in the lecture notes  a give a very short and convincing explanation of how the invariant is true before the first iteration of the loop  as always be sure to explain how every part of the invariant is true not just one part of it  hint in this case note that before the first iteration i is   what can be said about subarray a  i   recall what was said in lecture about vacuous truth b give a concise and convincing explanation of how your pseudocode ensures the invariant is true after each successive iteration  refer directly to the pseudocode citing specific lines of pseudocode in your explanation  hint before the i'th iteration starts we know that a  i   contains the i   smallest values of a in sorted order  what element of a will be in ai when the i'th iteration is over and how does that help you establish when that iteration is over that a  i are then the i smallest elements of a and in sorted order  c give a concise and convincing explanation of how the algorithm meets its specifi- cations  refer specifically to both the invariant property and the specifications as part of this explanation referring to the specifications is essential for establishing algorithm correctness hint at the end of the loop i  n  what elements then are in ai  n and what does that say about the element that's then in an and where it belongs in sorted order then how does knowing that a  i   is the i   smallest values of a in sorted order fit with the specification for the sorting problem to help you explain correctness  please write all three parts in your answer for this exercise  and please be sure each part of your explanation explains both components of the invariant not just the part about a  i   but also the part about ai  n  it is a common error to sometimes overlook one part or the other  these do not need to be three lengthy answers a few sentences each could be enough as long as those sentences contain the key details   refer specifically to the pseudocode and to the specifications for the sorting problem in your explanation  diagrams or specific examples are not sufficient on their own but if you'd like to include them along with a textual explanation feel free do so   the specification for the sorting problem is repeated here for convenience   input sequence of numbers a        an  output permutation reordering b        bn of the input sequence  perhaps leaving them unchanged such that b  b         bn     this specification is the same as the one presented in lecture notes capturing our intuitions of what it means for a list to be sorted  please see me if there are questions about it or about any part of the exercise    