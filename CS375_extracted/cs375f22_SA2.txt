analysis of algorithms  cs  fall  small assignment   due by the beginning of class wednesday october    this small assignment will be graded on effort make a demonstrable strong effort to solve the problems and explain your answers thoroughly including if you were not able to solve an exercise what progress you made what was left unsolved and what made it hard to solve and you will receive full credit   we will go over this exercise in our next class meeting  because of that on-time submission of this assignment is essential any submission after the beginning of class pm on the deadline date will get a grade no higher than a     for this smaller assignment the standard file naming conventions apply please sub-  mit your typewritten answers in a pdf file named  cs sa userid pdf  where userid is replaced by your colby userid your full userid including class year for example my file would be called cs sa eaaron pdf and submit it to your submittedwork folder in your google drive space for this course  please reach out to me right away with any questions or concerns about this   a general note for cs as always please present answers cleanly and explain them clearly and thoroughly giving all details needed to make your answers easy to understand typed-up rather than handwritten answers are especially appreci- ated  feel free to talk with your prof  or ta's about using latex to typeset your answers graders may not award full credit to incomplete or illegible solutions  clear communication is the point on every assignment   in general in cs unless explicitly specified otherwise answers should be accompa- nied by explanations  answers without explanations may not receive full credit  please feel free to ask me any questions about explanations that might come up  exercises    give an iterative not recursive algorithm that returns a list of all permutations of  elements of an input list    input list l  a        an  output list l  p        pn of all permutations of l      that is each pi is a permutation of l i e  pi is a list containing exactly the elements of l and no two pi have the elements of l in the same ordering   as part of your process in designing this algorithm be sure to think of a loop invariant for the algo's outer loop as was demonstrated in the lecture notes of our oct   class  you do not need to take the formal approach in our textbook of considering initialization maintenance and termination just have a description of what is true    each time through the loop as we did in class and use it in the algo's design and explanation of correctness  there may be multiple possible loop invariants that would work well   for full credit please be sure to do the following as parts of explaining your algorithm's correctness  a use your loop invariant as part of your explanation  b explicitly directly refer to the algo's specifications as part of establishing correct-  ness  in addition please give the most helpful asymptotic complexity bounds you can on both the time and space complexity of your algorithm using o  or  notation  as always explain how you arrived at your answers for these complexity bounds   please turn in your best effort for this exercise as stated in the instructions at the top of this assignment sheet even if for any reason you aren't able to complete the assignment exactly as given please explain your thought process fully and describe the parts of the problem you hadn't fully solved and turn in the best work you can by the deadline   note as we discussed in class there are n permutations of a list with n elements  it is taken as a definition that    so we'd say the empty list has  permutation  a list with one element also has only  permutation  please check your algorithm on boundary cases such as these    