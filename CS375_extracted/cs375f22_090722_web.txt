CS   CS   Analysis of Algorithms Professor Eric Aaron Lecture  M W pm Lecture Meeting Location Davis  Instructor Info Professor Eric Aaron Website httpscscolbyedueaaron Office Davis  Office Hours M pm T pm W pm Th amnoon and by email appointment PhoneVoicemail   Email eaaroncolbyedu Course Website httpscscolbyeducoursesFcs The above email address is the best way to contact me My website is the most important info on this slidethe rest of it can be found there CS   A tiny bit about the course Your textbook  Required course textbook Introduction to Algorithms  rd edition by Cormen Leiserson Rivest and Stein Online version is available FREE through the Colby library  Recommended textbook Introduction to The Design and Analysis of Algorith ms  rd edition by Levitin Not required   Good secondary source with different coverage som e images and exercises in the class may come from that book See link from CS website Additional Notes page A tiny bit more about the course Components of an algorithms course  Important elements for any course on algorithms  Classic algorithms which you might use or adapt f or your work  Algorithm design techniques and paradigms  Creating and working with algorithm specifications Analyzing and explaining an algorithms correctnes s  Analyzing and explaining an algorithms complexity Communication is extremely important to our field  Eg explanations of correctness and complexity CS   A tiny bit more about the course Components of an algorithms course  Important elements for any course on algorithms  Classic algorithms which you might use or adapt f or your work  Algorithm design techniques and paradigms  Creating and working with algorithm specifications Analyzing and explaining an algorithms correctnes s  Analyzing and explaining an algorithms complexity Communication is extremely important to our field  Eg explanations of correctness and complexity  This course is not focused on programming its fo cused on algorithms  More about that soon  Programming will not be required on any assignment  except possibly the last project assignment A tiny bit more about the course Components of graded work in CS  Problem sets  Due at least one week after being assigned  Smaller assignments  Typically due beginning of next class meeting  May be discussed in next class meeting  Project assignments In general no programming required  but please feel free to code stuff up if youd li ke  Work in teams  Conceptually connected problems  applications wi th team writeup  Class participation  Anything that constructively contributes to class discussion speaking in class making points in office hours making points  by email etc This course is about algorithms  not programs although the two are certainly related More about this soon really CS   Comparing CS  CS Courses about complexity and correctness of algorit hms CS  Math  Mathematical Reasoning not required  No experience needed with deep mathematics not ev en calculus     or logical reasoning  proof techniques  Focused more on what  how  not deeply about why CS  Prerequisite  Math   Connects material to deeper mathematics and logica l reasoning  Focused rigorously on all of what how  and why  Recommended if interested in graduate study after Colby or software          engineering jobs that are more about design  archi tecting and less about programming Basically the same material in both  and  Covered differently in  than in  CS   Comparing CS  CS Courses about complexity and correctness of algorit hms CS  Math  Mathematical Reasoning not required  No experience needed with deep mathematics not ev en calculus     or logical reasoning  proof techniques  Focused more on what  how  not deeply about why CS  Prerequisite  Math   Connects material to deeper mathematics and logica l reasoning  Focused rigorously on all of what how  and why  Recommended if interested in graduate study after Colby or software          engineering jobs that are more about design  archi tecting and less about programming Both classes discuss two key questions about problem solving  How do we get a good solution  How do we know we got it right but CS is more mathematically rigorous and as p art of that goes deeper than CS does into the How do we know we got it right question One way to think of it  more  for the rooms with the keyboards  more  for the rooms with the whiteboards Comparing CS  CS  CS Courses about complexity and correctness of algorit hms CS  Math  Mathematical Reasoning not required  No experience needed with deep mathematics not ev en calculus     or logical reasoning  proof techniques  Focused more on what  how  not deeply about why CS  Prerequisite  Math   Connects material to deeper mathematics and logica l reasoning  Focused rigorously on all of what how  and why  Recommended if interested in graduate study after Colby or software          engineering jobs that are more about design  archi tecting and less about programming Courses about models of computation CS crosslisted as Math    Prerequisite  Math   Covers mathematical models underlying computationa l tools programming languages and complexity  Abstract broadly applicable and influential appro ach to system design and analysis  Emphasizes proofs and analytical methods  More conceptual less applicationoriented than CS  CS Basically the same material in both  and  Covered differently in  than in  Very different material from that in    CS   Problems and Solutions  On a fundamental level CS and all of Computer Science is all about problemsand problem solving  What makes a solution to a problem good or bad What makes one solution to a problem better than another You think youve got problems CS   Problems and Solutions  On a fundamental level CS and all of Computer Science is all about problemsand problem solving  Throughout the course and throughout all of Computer Science definitions are very important so lets start here  What is a problem  in a useful computational sense  What does it mean to solve a problem  What makes a solution to a problem good or bad What makes one solution to a problem better than another Note This isnt the question of  How does one solve a problem This is about what it means to have a solution  no matter how that solution is found You think youve got problems Problems Algorithms and Code pt  Problems  What is a problem  in a useful computational sense  Informal definition In a relevant sense a problem is an inputoutput relationship From our textbook The statement of a problem spec ifies in general terms the desired input  output relations hip CS   Problems Algorithms and Code pt  Problems  What is a problem  in a useful computational sense  Informal definition In a relevant sense a problem is an inputoutput relationship  For example you may have heard of the sorting problem From our textbook The statement of a problem spec ifies in general terms the desired input  output relations hip Input A sequence L of n numbers a   a nOutput A sequence L of n numbers b   b n that reorders the input sequence perhaps leaving them unchanged such that  b  b     b nIts often a good idea to have a specification like  the one in yellow above as part of the comments for functions you write in your programsit  makes understanding the code and ensuring its correctness much much easier Problems Algorithms and Code pt  Problems  What is a problem  in a useful computational sense  Informal definition In a relevant sense a problem is an inputoutput relationship  What does it mean to solve a problem  What makes a solution to a problem good or bad What makes one solution to a problem better than an other From our textbook The statement of a problem spec ifies in general terms the desired input  output relations hip Now that we have a definition of problem  we can come up with a cleaner answer to this CS   Problems Algorithms and Code pt  Algorithms  What is a problem  in a useful computational sense  Informal definition In a relevant sense a problem is an inputoutput relationship  Whats an algorithm Informal definition from CLRS  What does it mean to solve a problem  Informal definition In this computational sense a solution to a problem is an algorithm  We say an algorithm correctly solves a problem when it transforms every input to its related correct output An algorithm is a welldefined computational procedure that takes input and produces output Problems Algorithms and Code pt  Algorithms  What is a problem  in a useful computational sense  Informal definition In a relevant sense a proble m is an inputoutput relationship  An algorithm correctly solves a problem when it transforms every input to its related correct o utput What makes a solution to a problem good or bad  For example consider the sorting problem below It has many solutions What makes one solution better than another Input A sequence L of n numbers a   a nOutput A sequence L of n numbers b   b n that reorders the input sequence perhaps leaving them unchanged such that  b  b     b nThis top part is just review all repeated from before CS   Problems Algorithms and Code pt  Algorithms What makes a solution to a problem good or bad  For instance consider the sorting problem What makes one solution to a problem better than another Correctness ie does it work Time complexity ie how fast is it Space complexity ie how much memory does it use  Other Input A sequence L of n numbers a   a nOutput A sequence L of n numbers b   b n that reorders the input sequence perhaps leaving them unchanged such that  b  b     b nProblems Algorithms and Code pt Code  Just as a problem can have many algorithms that solve it eg sorting searching problems There are multiple sort and search algos Which on es do you know   An algorithm can have many possible implementations in code  For example every programming language would lead  to a different implementation  For CS well consider problems and algos more than code  You already know enough to implement algos in at le ast one language Determining the best solutions for a problem is oft en better at the algorithm level than the code levelall implemen tations of the same algorithm will have the same time  space complexity CS   Business Optional but appreciated  Please email me from the account at which youd want me to contact you  Include a sentence on what youd like to get out o f the course   plus anything else you might like to tell me  Also in your email let me know if you were able to access the course website and lecture notes without any diffic ulties  Recall website is at httpscscolbyeducoursesFcs Ill post lecture notes by the end of the dayie  midnighttoday Lecture notes are a primary means of communication with you in CS You may well end up looking back at them reg ularly Please be sure you can access  read them without d ifficulties CS   Business pt   Smaller Assignment  out today  Due in  week Sept   As always in this class unless otherwise specifie d deadline is at pm on the due date before the beginning of class  If a time isnt given for a deadline assume it is  pm all semester long  Please be sure to do the reading on it  If you have questions about the math prerequisite s in the Appendices please let me knowotherwise I will assume you are comfortable wi th them  Note Unusual deadline because its the first day of class  Most Smaller Assignments will be due by the next class meeting not in  week  Find it at the Smaller Assignments page at the course website 