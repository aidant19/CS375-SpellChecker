CS   CS   Analysis of Algorithms Professor Eric Aaron Lecture  M W pm Lecture Meeting Location Davis  Business  Grading update  SA returned already  PS grading update  I welcome feedback about grader feedbacklets talk  Problem Set  due Oct   See note about break statementsplease avoid them in CS  Please get started early and ask questions early  Project  due end of day today  Please dont count on my availability for much he lp by email after I leave the office this afternoon  Another SA may be out soonIll email if so CS   Loop Invariantsa Warmup  A problemsolving warmupconsider the following gam e  An odd number of red balls and any number of green balls are put in a bag An infinite supply of green balls is available A move consists of removing two  balls from the bag and applying the following rule If the balls are the same color t hey are both thrown away and a new green ball is placed in the bag If the balls are of differe nt colors the red one is returned to the bag and the green one is discarded The game ends when it i s no longer possible to pick two balls from the bag  Consider a oneplayer version where the player can look in the bag before removing two balls from it  Give a method strategy  algorithm so that when the g ame is over there is one ball left in the bag and it is green  Give a method strategy  algorithm so that when the g ame is over there is one ball left in the bag and it is red  What useful loop invariant do you have in mind when designing  explaining your algorithm  Maybe it involves the odd  evenness the parity  of the number of red or green balls A loop invariant is something thats true about the variables every time the algo goes through the loop every timeso invariant But is false once the loop ends in a way that gets  to the problems solution Game description repeated from prev slide Loop Invariantsa Warmup  A problemsolving warmupconsider the following gam e  An odd number of red balls and any number of green balls are put in a bag An infinite supply of green balls is available A move consists of removing two  balls from the bag and applying the following rule If the balls are the same color t hey are both thrown away and a new green ball is placed in the bag If the balls are of differe nt colors the red one is returned to the bag and the green one is discarded The game ends when it i s no longer possible to pick two balls from the bag  Consider a oneplayer version where the player can look in the bag before removing two balls from it  Give a method strategy  algorithm so that when the g ame is over there is one ball left in the bag and it is green  Give a method strategy  algorithm so that when the g ame is over there is one ball left in the bag and it is red  What useful loop invariant do you have in mind when designing  explaining your algorithm  Maybe it involves the odd  evenness the parity  of the number of red or green balls Loop Invariant property  Every time through the game until theres one ba ll left The overall number of balls decreases by  AND The number of red balls remains oddeither decreases  by  or by  Game description repeated from prev slide CS   Loop Invariantsa Warmup  A problemsolving warmupconsider the following gam e  An odd number of red balls and any number of green balls are put in a bag An infinite supply of green balls is available A move consists of removing two  balls from the bag and applying the following rule If the balls are the same color t hey are both thrown away and a new green ball is placed in the bag If the balls are of differe nt colors the red one is returned to the bag and the green one is discarded The game ends when it i s no longer possible to pick two balls from the bag  Consider a oneplayer version where the player can look in the bag before removing two balls from it  Give a method strategy  algorithm so that when the g ame is over there is one ball left in the bag and it is green  Give a method strategy  algorithm so that when the g ame is over there is one ball left in the bag and it is red  What useful loop invariant do you have in mind when designing  explaining your algorithm  Maybe it involves the odd  evenness the parity  of the number of red or green balls Loop Invariant property  Every time through the game until theres one ba ll leftThe overall number of balls decreases by  AND The number of red balls remains oddeither decreases  by  or by  How does this help you solve the problem Game description repeated from prev slide CS   Time Complexity Classes Illustrated Complexity Class What we call it O Constant Olg n Log time On Linear On lg n n lg nOn nsquared quadratic On ncubed cubic On Exponential On Factorial What algos do you know in each complexity class Do you have any favorites These are common complexity classes but there are many others Time Complexity Classes Illustrated Complexity Class What we call it Example algorithms   objects O Constant Print Hello World stack operations and much much morebe careful Olg n Log time Binary search On Linear Exhaustive search of an array linear search Merge as used in MergesortOn lg n n lg n Mergesort Heapsort Recall sorting can be done in n lg n On nsquared quadratic Insertion  selection  bu bble sort several graph algos On ncubed cubic My favorite algorithm  a graph algoOn Exponential Number of subsets of a set of size n On Factorial Number of orderings  permutations of elements of a list of length nThese are common complexity classes but there are many others CS   Time Complexity Classes Illustrated Complexity Class What we call it Example algorithms   objects O Constant Print Hello World stack operations and much much morebe careful Olg n Log time Binary search On Linear Exhaustive search of an array linear search Merge as used in MergesortOn lg n n lg n Mergesort Heapsort Recall sorting can be done in n lg n On nsquared quadratic Insertion  selection  bubble s ort several graph algos On ncubed cubic My favorite algorithm  a graph algoOn Exponential Number of subsets of a set of size n On Factorial Number of orderings  permutations of elements of a list of length nThe greenshaded ones are examples of polynomial time classesupper bounded by nkfor some constant k Problems solvable in polynomial time are consider ed tractable More about this later in the semester CS   The CS Guitar Genius Tour  Guitarists Steve Vai and Pasquale Grassoboth faves of your CS Profare finally going on tour together  There are n possible venues they could play on their tour  They could play any number of them from  to nDISCLAIMER There is no such tour This is a gratuitous madeup example But Vai and Grasso are both great guitar playersthat part is true Steve Vai from cover of album Inviolate Pasquale Grasso from video for It Dont Mean A Thing The CS Guitar Genius Tour  Guitarists Steve Vai and Pasquale Grassoboth faves of your CS Profare finally going on tour together  There are n possible venues they could play on their tour  They could play any number of them from  to n They have a list ordering of the nvenues in mindthe order in which it makes sense to travel to them  So if the ordering is V V   Vnfrom first to last they would never play Vybefore Vxif y  x  Larger numbers are always later in the ordering  But they could skip or play any or all venues DISCLAIMER There is no such tour This is a gratuitous madeup example But Vai and Grasso are both great guitar playersthat part is true CS   The CS Guitar Genius Tour  Guitarists Steve Vai and Pasquale Grassoboth faves of your CS Profare finally going on tour together  There are n possible venues they could play on their tour  They could play any number of them from  to n They have a list ordering of the nvenues in mindthe order in which it makes sense to travel to them  So if the ordering is V V   Vnfrom first to last they would never play Vybefore Vxif y  x  Larger numbers are always later in the ordering  But they could skip or play any or all venues DISCLAIMER There is no such tour This is a gratuitous madeup example But Vai and Grasso are both great guitar playersthat part is true We want to figure out the best tour itinerary for them For now well use a brute force method of checking all possible tour itineraries How many possible itineraries are there Exhaustive Search Brute Force  One common category of algorithm is called exhaustive search As just a couple of examples  Find if an element is a member of a collection se arch problem  Find the optimal element in a collectioneg most  valuable item or items to take as prizes optimization problem Find the best way of ordering all elements in a co llectioneg best path through a network optimization problem  Exhaustive search is a kind of brute force algorithm  Design is straightforward  Look through all elements in the collection see i f they meet criteria search optimality  CS   Exhaustive Search Brute Force Notes about Exhaustive Search  Brute Force algos Applicable to a very wide variety of problems  It may be the only algo design paradigm where its more difficult to find problems to which it cant be applied than problems to which it can  For some important problems brute force algos are practical efficient and commonly usedwith no limitation on input  Linear search matrix multiplication etc  Sometimes its more expensive to design  implement  maintain a clever solution than to just use brute force  Depends sometimes on how many times the algo  so lution will be run See Levitin recommended not required textbook pg  Exhaustive Search Brute Force Notes about Exhaustive Search  Brute Force algos Theyre often not the most asymptotically efficient solution we know of  But more times than youd think they are More about that later in the semester  Because of their straightforward design theyre often easier than other algos to  understand and explain to others  reason about correctness  complexity  maintain  extend  alter  They can be a good first step to a more efficient solution Something To Consider When youre presenting a nonbrute force algo as a preferred solution you might give reasons that its better than brute force and say how much better it is eg by asymptotic complexity analysis More about that later in the semester too CS   Exhaustive Search Brute Force  How many subsets are there of a given set S  Say for notation Shas nelements  How many orderings or permutations  are there of all elements in a list L  a   a n Vocab  The set of all subsets of S is called the power set of S The Power Set of a Set S Consider set S of size n How many subsets of S are  there As a small example consider S     n   What are all the subsets          there are  of them The set of all subsets of S is called the power set of S CS   Exponential Time and The Power Set of a Set S  When we think of exponential timeor more generally something of size  length nwe often think of all subsets of a set of size nConsider set S of size n How many subsets of S are  there As a small example consider S     n   What are all the subsets          there are  of them The set of all subsets of S is called the power set of S Recall the n entry in our table of common complex ity classes Exhaustive Search Brute Force  How many subsets are there of a given set S  Say for notation Shas nelements The power set of Shas  nelements What does this tell us about the asymptotic complex ity of an exhaustive search algorithm over all subsets of a set Remember exhaustive search implies that it looks at all elements at least in worst case of a collecti on Will we describe complexity using BigO  or Vocab  The set of all subsets of S is called the power set of S 