Analysis of AlgorithmsCS  Fall Problem Set DueAT THE BEGINNING OF CLASS Wednesday October For this assignment standard file naming conventions apply Please submit your typewritten answers in a PDF file named CS PSuseridpdf where userid is replaced by your full Colby userid and submit it to your SubmittedWork folder Pleasereach out to me right away with any questions or concerns about thisFrom your textbook CLRS please read Chapters   and  NOTE Somematerial there is more mathematically intense than we needdont worry about thosepartsbut please do read over the parts that give basic ideas behind content coveredin lecture eg O notation functions orders of growth loop invariantsEx  below mentions brute force algorithms well talk more about them on Sept A few essential general style guidelines for writing algorithms in CSUnless explicitly instructed otherwise avoid using break statements or continueorpass statements in algorithms for CSas we will discuss in class employing them can interfere with common approaches to reasoning about code correctness eg using loop invariants Instead please find other approaches perhapsusing boolean variables to indicate loop termination conditionsAnswers employing break orcontinue pass     may not receive full creditPlease feel free to talk with me about any particular situations that might comeupIm happy to talk with you about how to avoid break s in your codeWhen presenting an algorithm avoid using languagespecific commandsroutineswithout comments in pseudocode Pseudocode by definition is supposed to belanguageindependent higherlevel than particular programming languagesPlease be sure to initialize variables or declare inputsouptuts and be sure thepurpose of every variable including the names of functions or algorithmscanbe quickly and fully understood by a reader typically this is done either by usingdescriptive variable names or by describing variables in English Algorithms inwhich variables cannot be promptly understood may not receive full credit soplease feel free to ask me about variable names and descriptionsIm happy totalk with you about particular situations that might come upOften the clearest way to present an algorithm is with both pseudocode andEnglish description Pseudocode must be accompanied by some kind of clarifyingEnglish description to count as fully explainedA general note for CS When writing up your homework please present youranswers neatly and explain your answers clearly  giving all details needed to makeyour answers easy to understand Graders may not award full credit to incomplete orhard to understand solutions Clear communication isthe point on every assignmentIn general in CS unless explicitly specified otherwise answers should be accompanied by explanations Answers without explanations may not receive full credit Pleasefeel free to ask me any questions about explanations that might come upExercises Prof E Nigmas colleagues in the Department of Insufficient Specification at thePortland Institute of Technology which continues to not exist were working on thefollowing pseudocode algorithm which takes an integer nas inputDISalgonr  i  n  nwhile i   dofor j   to i dor  r  i  ireturn rIn the above iis integer division ie it returns an integer truncating any decimalpart of the result of the divisionso as one concrete example not necessarily onethat comes up in this exercise would return  not a What is the final value of rreturned by this function Express it as a functionofnb Express the running time as a function of n ofDISalgo using notationc Express the space complexity as a function of n ofDISalgo using notationAs usual be sure to give concise but convincing explanations for your answersNOTE Here are some hints which might be especially helpful for part a of thisexerciseYou are welcome to assume that the input value nis a power of  if it simplifiesyour analysisUsing summation notation may helpTheres a common trick in algorithm analysis involving summationnote thatfor some exponent xx x Heres a quick derivation of thatxxxbecause   xfor any x xby properties of exponentsThis trick might be useful in your analysis of this algorithmPlease be careful of offbyone errors Prof Sue Persmart in the CS Department at Portland Institute of Technology likes totell a story about the invention of chessa According to legend the game of chess we invented long ago in India by a certainsage When he took the invention to his king the king liked the game so muchthat he offered the inventor any reward he wanted The inventor asked for somegrain to be obtained as follows Just one grain of wheat was to be placed on thefirst square of the chessboard then two grains on the second square four grainson the third square eight grains on the fourth etc until all  squares had beenfilledIf it took  second to count each grain of wheat how long in seconds would ittake to count all the grains of wheat due to the sageb What if instead of doubling the number of grains for each square of the chessboard the inventor asked for adding two grains Then assuming again that ittook  second to count each grain how long in seconds would it take to countall the grains of wheat due to the sage The Department of Redundancy Department at the Portland Institute of Technologywhich continues to not existI know I said that previously in this problem set butthis is the Department of Redundancy Department after all     has asked you forhelpThey work with arrays An of integers in which every integer is between  and ntheres no constraint on the ordering of numbers in the array In addition they happento know that all of the integers between  and nare necessarily in each array Andthat means that exactly one number is repeated in each array Do you see whyThey want you to come up with an algorithm that for any such input array outputs thenumber thats repeated in the array Youll come up with several such algorithmsbutno two will be the samea First give a  ntime brute force algorithm to solve this problemb Then give a  nlgntime algorithm to solve this problemc Then give a  ntime algorithm to solve this problem that has On spacecomplexityd Finally give a  ntime Ospace complexity algorithm to solve this problemAs is conventional were asking about worst case time complexity unless otherwisespecifiedTo earn full credit be sure to include all of the following for each of the four algorithmsPseudocode accompanied by a brief English explanation of what the algorithmdoesA concise but convincing explanation of correctnessA concise but convincing explanation of its time complexityA concise but convincing explanation of its space complexity