analysis of algorithms  cs  fall   problem set   due at the beginning of class wednesday november    for this assignment standard file naming conventions apply please submit your type- written answers in a pdf file named cs ps userid pdf where userid is re- placed by your full colby userid and submit it to your submittedwork folder  please reach out to me right away with any questions or concerns about this   a general note for cs when writing up your homework please present your answers neatly and explain your answers clearly giving all details needed to make your answers easy to understand  graders may not award full credit to incomplete or hard to understand solutions  clear communication is the point on every assignment   in general in cs unless explicitly specified otherwise answers should be accompa- nied by explanations  answers without explanations may not receive full credit  please feel free to ask me any questions about explanations that might come up  exercises    prof  nigma at the portland institute of technology which still doesn't exist was thrilled with your previous work and hired you again to analyze the algorithm given here in pseudocode as usual however prof  nigma neglected to explain what the algorithm does   def qa  n    input array a  n   of n real numbers for n    if n   return a else temp  qa  n    if temp  an   return temp else return an    a what does this algorithm compute give an english description of what value it returns on a given input array along with a convincing explanation of your answer  you do not need to give examples as part of your answer but as always you are welcome to include examples along with the english description if it would make your answer clearer   b what is the  complexity class of this algorithm to find it first state a re- currence for the time complexity of the algorithm then solve it using one of the methods presented in class for solving recurrences  be sure to give a thorough ex- planation of what makes your recurrence correct and show your work for solving the recurrence including showing a k'th step in your method if you use unwind- ing or recursion trees  if you use recursion trees give a table as on smaller assignment sa to show your work       consider a rectangle whose side lengths are two consecutive fibonacci numbers  of course neither of them is   such a rectangle could be for example  by  or  by  or  by  etc   a give a recursive algorithm to dissect such a rectangle into squares such that no more than two of the resulting squares are the same size  for example if you had two  by  squares you could have at most one  by  square  here's a specification for your algorithm   input two consecutive fibonacci numbers f f  representing an f by f rectangle such that f  f  neither f nor f will be     output a list of integers representing side lengths of squares  such that the input rectangle can be dissected into squares of those sizes  no more than two of the squares can be the same size   please be sure to give an english description of the algorithm along with pseu- docode explaining the main points of its design and a concise inductive argument for its correctness i e  say what makes the base case correct what makes the re- cursive cases correct and how you know the algorithm terminates   b what is the time complexity of your algorithm in part a give a recurrence for your algorithm and solve it to get a  complexity bound  as always fully explain your answer show your work in solving the recurrence and be sure to explicitly say what each variable in your complexity class stands for e g  if you're presenting a n algorithm be sure to say what n refers to     